<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>itwillbs.p2c3</groupId>
	<artifactId>class_will</artifactId>
	<name>Class_Will</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>11</java-version>
		<org.springframework-version>5.3.34</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	<dependencies>
<!--  Spring  -->
		<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${org.springframework-version}</version>
			<exclusions>
			<!--  Exclude Commons Logging in favor of SLF4j  -->
			<exclusion>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${org.springframework-version}</version>
		</dependency>
		<!--  MySQL - JDBC 연결에 사용될 라이브러리 추가  -->
		<!--  1. 스프링에서 JDBC 연동에 필요한 기능을 제공하는 spring-jdbc 라이브러리  -->
		<!--  기존 스프링 버전(${org.springframework-version}) 그대로 사용  -->
		<!--  https://mvnrepository.com/artifact/org.springframework/spring-jdbc  -->
		<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${org.springframework-version}</version>
		</dependency>
		<!--  2. MySQL - JDBC 연결을 위한 커넥터(MySQL Connector)   -->
		<!--  https://mvnrepository.com/artifact/com.mysql/mysql-connector-j  -->
		<dependency>
		<groupId>com.mysql</groupId>
		<artifactId>mysql-connector-j</artifactId>
		<version>8.3.0</version>
		</dependency>
		<!--  3. 커넥션 풀을 관리하는 HikariCP 라이브러리 추가(Tomcat DBCP 대용으로 사용 가능)  -->
		<!--  Tomcat DBCP 에 비해 가볍고, 빠르고, 안정적인 처리가 가능  -->
		<!--  Java 11 이상일 때 5.x 버전 사용  -->
		<dependency>
		<groupId>com.zaxxer</groupId>
		<artifactId>HikariCP</artifactId>
		<version>5.1.0</version>
		</dependency>
		<!--  4. MyBatis 활용에 필요한 라이브러리 추가  -->
		<!--  4-1) MyBatis 기본 라이브러리  -->
		<!--  https://mvnrepository.com/artifact/org.mybatis/mybatis  -->
		<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.5.16</version>
		</dependency>
		<!--  4-2) MyBatis - Spring 연동 라이브러리  -->
		<!--  주의! 3.x.x 버전 사용 시 JDK 11 에서 오류 발생함(지원되지 않음) => 2.x.x 필요  -->
		<!--  https://mvnrepository.com/artifact/org.mybatis/mybatis-spring  -->
		<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>2.1.2</version>
		</dependency>
		<!--  5. SQL 로그에 사용할 log4jdbc-log4j2 라이브러리  -->
		<!--  https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1  -->
		<dependency>
		<groupId>org.bgee.log4jdbc-log4j2</groupId>
		<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		<version>1.16</version>
		</dependency>
		<!--  6. VO(DTO) 클래스 요소 자동 관리를 위한 Lombok 라이브러리  -->
		<!--  이클립스 환경에서 사용 시 직접 확인하려면 라이브러리 추가와 별개로 플러그인 설치 필요  -->
		<!--  https://mvnrepository.com/artifact/org.projectlombok/lombok  -->
		<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>1.18.30</version>
		<scope>provided</scope>
		</dependency>
		<!--  7. 파일 처리(업로드 등) 라이브러리(commons-io, commons-fileupload)  -->
		<!--  https://mvnrepository.com/artifact/commons-io/commons-io  -->
		<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.16.1</version>
		</dependency>
		<!--  https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload  -->
		<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.5</version>
		</dependency>
		<!--  8. 난수 생성 등의 다양한 작업을 제공하는 commons-lang3 라이브러리  -->
		<!--  https://mvnrepository.com/artifact/org.apache.commons/commons-lang3  -->
		<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.14.0</version>
		</dependency>
		<!--  9. 암호화에 사용될 BCryptPasswordEncoder 클래스가 포함된 Spring-Security-Web 라이브러리  -->
		<!--  주의! JDK 11(class file version 55) 기준 5.x.x 버전까지만 사용 가능  -->
		<!--  https://mvnrepository.com/artifact/org.springframework.security/spring-security-web  -->
		<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>5.8.12</version>
		</dependency>
		<!--  10. 자바 메일 발송 라이브러리(javax.mail, javax.activation)  -->
		<!--  https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail  -->
		<dependency>
		<groupId>com.sun.mail</groupId>
		<artifactId>jakarta.mail</artifactId>
		<version>2.0.1</version>
		</dependency>
		<!--  https://mvnrepository.com/artifact/com.sun.activation/jakarta.activation  -->
		<dependency>
		<groupId>com.sun.activation</groupId>
		<artifactId>jakarta.activation</artifactId>
		<version>2.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<!-- json객체 -->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20240303</version>
		</dependency>
		
		<!-- RESTful API 요청 등의 과정에서 JSON 데이터가 전달될 때 -->
		<!-- 자동으로 파싱을 수행해주는 라이브러리(Gson, Jackson) -->
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.11.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<!-- JUnit Test용 프레임워크 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>5.3.36</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- 엑셀다운로드를 위해 POI 의존성 추가 -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>5.2.2</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>5.2.2</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml-schemas</artifactId>
		    <version>4.1.2</version>
		</dependency>
		
	    <dependency>
	        <groupId>org.apache.xmlbeans</groupId>
	        <artifactId>xmlbeans</artifactId>
	        <version>5.1.1</version>
	    </dependency>
	    
	    <!-- JASON객체 JAVA변환 -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.13.3</version>
		</dependency>
    
	    <!-- logging을 위한 의존성 추가 -->
	        <!-- Log4j2 Core -->
	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-core</artifactId>
	        <version>2.17.0</version>
	    </dependency>
	    <!-- Log4j2 API -->
	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-api</artifactId>
	        <version>2.17.0</version>
	    </dependency>
	    
	    <!-- iamport REST Client for JAVA -->
		<dependency>
		    <groupId>com.github.iamport</groupId>
		    <artifactId>iamport-rest-client-java</artifactId>
		    <version>0.2.23</version>
		</dependency>
		
		
		<!-- 쿨에스엠에스  -->
<!-- 		<dependency> -->
<!-- 		    <groupId>net.nurigo</groupId> -->
<!-- 		    <artifactId>sdk</artifactId> -->
<!-- 		    <version>4.3.0</version> -->
<!-- 		</dependency> -->

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-websocket -->
		<!-- WEBSOCKET 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-websocket</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		

		<!--   =====================================================================  -->
		<!--  AspectJ  -->
		<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjrt</artifactId>
		<version>${org.aspectj-version}</version>
		</dependency>
		<!--  Logging  -->
		<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>${org.slf4j-version}</version>
		<scope>runtime</scope>
		</dependency>
		<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${org.slf4j-version}</version>
		<scope>runtime</scope>
		</dependency>
		<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.15</version>
		<exclusions>
		<exclusion>
		<groupId>javax.mail</groupId>
		<artifactId>mail</artifactId>
		</exclusion>
		<exclusion>
		<groupId>javax.jms</groupId>
		<artifactId>jms</artifactId>
		</exclusion>
		<exclusion>
		<groupId>com.sun.jdmk</groupId>
		<artifactId>jmxtools</artifactId>
		</exclusion>
		<exclusion>
		<groupId>com.sun.jmx</groupId>
		<artifactId>jmxri</artifactId>
		</exclusion>
		</exclusions>
		<scope>runtime</scope>
		</dependency>
		<!--  @Inject  -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!--  Servlet  -->
		<!--  		<dependency>  -->
		<!--  			<groupId>javax.servlet</groupId>  -->
		<!--  			<artifactId>servlet-api</artifactId>  -->
		<!--  			<version>2.5</version>  -->
		<!--  			<scope>provided</scope>  -->
		<!--  		</dependency>  -->
		<!--  https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api  -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>4.0.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!--  Test  -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<!-- iamport REST Client for JAVA -->
	<repositories>
		<repository>
		    <id>jitpack.io</id>
		    <url>https://jitpack.io</url>
		</repository>
	</repositories>
	
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
