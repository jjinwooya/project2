<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task https://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <!-- 파일 업로드를 위해 form 태그에 enctype="multipart/form-data" 속성 추가했을 경우
    스프링 컨트롤러에서 Multipart 타입 파라미터들을 자동으로 처리하기 위해
    org.springframework.web.multipart.commons.CommonsMultipartResolver 객체 설정 필수!
    (spring-web-5.3.34.jar 라이브러리에 포함됨(기본 라이브러리))
    => id 속성값은 "multipartResolver" 이름 고정
    => class 속성값은 해당 라이브러리의 클래스 지정
    => 태그 내부에 beans:property 태그를 통해 업로드 파일 사이즈와 인코딩 방식 설정
       이 때, name 속성값은 고정값 사용
    -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10485760"></beans:property> <!-- 10MB -->
        <beans:property name="defaultEncoding" value="UTF-8"></beans:property>
    </beans:bean>

    <context:component-scan base-package="itwillbs.p2c3.class_will" />

    <tx:annotation-driven />

    <context:property-placeholder location="classpath:/appdata.properties" />

    <!-- 스케줄러 활성화 -->
    <task:annotation-driven />

    <!-- CORS 설정 추가 -->
<!--     <beans:bean id="corsConfigurationSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource"> -->
<!--         <beans:property name="corsConfigurations"> -->
<!--             <beans:map> -->
<!--                 <beans:entry key="/**"> -->
<!--                     <beans:bean class="org.springframework.web.cors.CorsConfiguration"> -->
<!--                         <beans:property name="allowedOrigins"> -->
<!--                             <beans:list> -->
<!--                                 <beans:value>http://localhost:8081</beans:value> -->
<!--                             </beans:list> -->
<!--                         </beans:property> -->
<!--                         <beans:property name="allowedMethods" value="GET,POST,PUT,DELETE,OPTIONS,HEAD"/> -->
<!--                         <beans:property name="allowedHeaders" value="Origin,Content-Type,Accept"/> -->
<!--                         <beans:property name="allowCredentials" value="true"/> -->
<!--                     </beans:bean> -->
<!--                 </beans:entry> -->
<!--             </beans:map> -->
<!--         </beans:property> -->
<!--     </beans:bean> -->

<!--     <beans:bean id="corsFilter" class="org.springframework.web.filter.CorsFilter"> -->
<!--         <beans:constructor-arg ref="corsConfigurationSource"/> -->
<!--     </beans:bean> -->

</beans:beans>
